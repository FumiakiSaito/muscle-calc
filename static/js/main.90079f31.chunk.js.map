{"version":3,"sources":["components/About.js","components/Rmconv.js","components/Maxweight.js","components/Fivefive.js","Test.js","components/Level.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","About","classes","className","Grid","container","spacing","item","xs","Typography","variant","gutterBottom","Divider","divider","theme","width","marginBottom","root","flexGrow","margin","formControl","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","RmConv","React","useContext","DetailOptions","detailOptions","row","type","weight","benchpressCoefficient","squatCoefficient","coefficient","one","two","three","four","five","six","seven","eight","nine","ten","maxWeightList","push","i","maxWeight","Math","round","useState","startWeight","stepWeight","numberOfLines","values","setValues","handleChange","prop","event","target","value","Number","md","sm","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","TextField","label","InputProps","inputProps","min","max","step","endAdornment","InputAdornment","position","InputLabelProps","shrink","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableBody","rows","lineStartweight","getRows","map","key","sliderLabel","marginLeftRight","marginLeft","marginRight","unit","marginTop","sliderBox","Maxweight","setWeight","count","setCount","clsx","display","Box","getMaxWeight","Slider","aria-labelledby","marks","valueLabelDisplay","newValue","Fivefive","weightTable","weekWeight","x","week","graph","border","Label","flex","strengthTable","getGraphData","gender","bodyWeight","kgTable","lbRow","lb","lb2kg","index","findIndex","kgRow","columnIndex","standards","y","myData","eleteMaxWeight","tickFormat","Point","this","props","point","Component","Level","setBodyWeight","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","checked","title","VictoryTheme","material","height","domainPadding","animate","duration","easing","containerComponent","tickValues","style","axisLabel","padding","ticks","stroke","tickLabels","fill","dependentAxis","horizontal","data","labels","datum","fontWeight","onLoad","before","_y","opacity","after","labelComponent","dy","dx","dataComponent","idx","weightL1","weightL2","weightL3","weightL4","weightL5","length","graphData","colorScale","indigo","Link","href","rel","text","appBar","zIndex","drawer","transition","transitions","create","sharp","leavingScreen","detailSettingsBar","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","createMenu","route","icontype","menus","Transition","forwardRef","ref","Slide","direction","createContext","PersistentDrawerLeft","useTheme","open","setOpen","handleDrawerClose","setDetailOptions","settingsOpen","setSettingsOpen","handleClose","Alert","elevation","handleDetailOptionsSave","CssBaseline","AppBar","Toolbar","IconButton","onClick","edge","noWrap","Drawer","paper","List","ListItem","button","to","ListItemIcon","icon","ListItemText","primary","exact","path","Provider","Dialog","fullScreen","onClose","TransitionComponent","Button","autoFocus","displayPrint","m","severity","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ykBAMMA,EAAYC,aAAW,iBAAO,CAClCC,MAAO,CACLC,SAAU,SAIC,SAASC,IAEtB,IAAMC,EAAUL,IAChB,OACE,yBAAKM,UAAWD,GACd,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,iEAKF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAG9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,8GAIF,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,6G,6ICZJb,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCf,MAAO,CACLgB,MAAO,OACPf,SAAU,KAEZa,QAAS,CACPG,aAAcF,EAAMR,QAAQ,IAE9BW,KAAM,CACJC,SAAU,EACV,uBAAwB,CACtBC,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXK,YAAa,CACXD,OAAQL,EAAMR,QAAQ,GACtBN,SAAU,SAKRqB,GAAkBC,aAAW,SAACR,GAAD,MAAY,CAC7CS,KAAM,CACJC,gBAAiBV,EAAMW,QAAQC,OAAOC,MACtCC,MAAOd,EAAMW,QAAQC,OAAOG,OAE9BC,KAAM,CACJC,SAAU,OANUT,CAQpBU,MAGEC,GAAiBX,aAAW,SAACR,GAAD,MAAY,CAC5CG,KAAM,CACJ,qBAAsB,CACpBO,gBAAiBV,EAAMW,QAAQS,OAAOC,WAHrBb,CAMnBc,MAOW,SAASC,KACtB,IAAMnC,EAAUL,KADe,EAIRyC,IAAMC,WAAWC,IAAjCC,EAJwB,oBAY/B,SAASC,EAAIC,EAAMC,GAGjB,IAAMC,EAAwBJ,EAAcI,sBACtCC,EAAwBL,EAAcK,iBAGxCC,EAAc,EACL,eAATJ,EACFI,EAAcF,EACI,UAATF,IACTI,EAAcD,GAIhB,IA/BgBE,EAAKC,EAAKC,EAAOC,EAAMC,EAAMC,EAAKC,EAAOC,EAAOC,EAAMC,EA+BhEC,EAAgB,GAGtBA,EAAcC,KAAKf,GAGnB,IAAK,IAAIgB,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAIC,EAAcjB,EAASG,EAAea,EAAKhB,EAC/CiB,EAAYC,KAAKC,MAAMF,GACvBH,EAAcC,KAAKE,GAGrB,OA3CgBb,EA4CdU,EAAc,GA5CKT,EA6CnBS,EAAc,GA7CUR,EA8CxBQ,EAAc,GA9CiBP,EA+C/BO,EAAc,GA/CuBN,EAgDrCM,EAAc,GAhD6BL,EAiD3CK,EAAc,GAjDkCJ,EAkDhDI,EAAc,GAlDyCH,EAmDvDG,EAAc,GAnDgDF,EAoD9DE,EAAc,GApDsDD,EAqDpEC,EAAc,GApDX,CAAEV,MAAKC,MAAKC,QAAOC,OAAMC,OAAMC,MAAKC,QAAOC,QAAOC,OAAMC,OAGhC,MAsDHnB,IAAM0B,SAAS,CACzCrB,KAAM,aACNsB,YAAa,GACbC,WAAY,IACZC,cAAe,KA1Dc,mBAsDxBC,EAtDwB,KAsDhBC,EAtDgB,KAkEzBC,EAAe,SAAAC,GAAI,OAAI,SAAAC,GAE3BJ,EAAOG,GAAQC,EAAMC,OAAOC,MAE5B,IAAMT,EAAcU,OAAOP,EAAOH,aAC5BC,EAAaS,OAAOP,EAAOF,YAC3BC,EAAgBQ,OAAOP,EAAOD,eAEpCE,EAAU,CACR1B,KAAMyB,EAAOzB,KACbsB,YAAaA,EACbC,WAAYA,EACZC,cAAeA,MAuBnB,OACE,yBAAKhE,UAAWD,EAAQe,MACtB,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,wBAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,6mBAMF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAE9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAACsE,GAAA,EAAD,CAAa3E,UAAWD,EAAQkB,aAC9B,kBAAC2D,GAAA,EAAD,CAAYC,GAAG,qBAAf,gBAGA,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHN,MAAON,EAAOzB,KACdwC,SAAUb,EAAa,SAEvB,kBAACc,GAAA,EAAD,CAAUV,MAAM,cAAhB,wCACA,kBAACU,GAAA,EAAD,CAAUV,MAAM,SAAhB,4EAKN,kBAACtE,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAAC6E,GAAA,EAAD,CACEL,GAAG,cACHM,MAAM,2BACN3C,KAAK,SACLwC,SAAUb,EAAa,eACvBI,MAAON,EAAOH,YACdsB,WAAY,CACVC,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAAKC,KAAM,KACtCC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,YAIX,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAAC6E,GAAA,EAAD,CACEL,GAAG,aACHM,MAAM,2BACN3C,KAAK,SACLwC,SAAUb,EAAa,cACvBI,MAAON,EAAOF,WACdqB,WAAY,CACVC,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAAIC,KAAM,KACvCC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,YAGX,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAAC6E,GAAA,EAAD,CACEL,GAAG,gBACHM,MAAM,eACN3C,KAAK,SACLwC,SAAUb,EAAa,iBACvBI,MAAON,EAAOD,cACdoB,WAAY,CACVC,WAAY,CAAEC,IAAK,EAAGC,IAAK,GAAIC,KAAM,GACrCC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAzB,WAEhBC,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,YAIX,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACyF,GAAA,EAAD,CAAgBC,UAAWC,MACzB,kBAACC,GAAA,EAAD,CAAOjG,UAAWD,EAAQH,MAAOsG,KAAK,QAAQC,aAAW,wBACvD,kBAACC,GAAA,EAAD,KACE,kBAACtE,GAAD,KACE,kBAACZ,GAAD,2BACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,aAGJ,kBAACmF,GAAA,EAAD,KAlHZ,SAAkB7D,EAAMsB,EAAaC,EAAYC,GAI/C,IADA,IAAIsC,EAAO,GACF7C,EAAI,EAAGA,EAAIO,EAAeP,IAAK,CACtC,IAAI8C,EAAkBzC,EAAeC,EAAaN,EAClD6C,EAAK9C,KAAKjB,EAAIC,EAAM+D,IAEtB,OAAOD,EA2GME,CAAQvC,EAAOzB,KAAMyB,EAAOH,YAAaG,EAAOF,WAAYE,EAAOD,eAAeyC,KAAI,SAAClE,GAAD,OACrF,kBAACT,GAAD,CAAgB4E,IAAKnE,EAAIM,KACvB,kBAAC3B,GAAD,KAAkBqB,EAAIM,KACtB,kBAAC3B,GAAD,KAAkBqB,EAAIO,KACtB,kBAAC5B,GAAD,KAAkBqB,EAAIQ,OACtB,kBAAC7B,GAAD,KAAkBqB,EAAIS,MACtB,kBAAC9B,GAAD,KAAkBqB,EAAIU,MACtB,kBAAC/B,GAAD,KAAkBqB,EAAIW,KACtB,kBAAChC,GAAD,KAAkBqB,EAAIY,OACtB,kBAACjC,GAAD,KAAkBqB,EAAIa,OACtB,kBAAClC,GAAD,KAAkBqB,EAAIc,MACtB,kBAACnC,GAAD,KAAkBqB,EAAIe,e,wBC5QpC5D,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCG,KAAM,CACJ,uBAAwB,CACtBE,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXF,QAAS,CACPG,aAAcF,EAAMR,QAAQ,IAE9BwG,YAAa,CACX/E,SAAU,QACVH,MAAO,QAETT,OAAQ,CACNA,OAAQL,EAAMR,QAAQ,IAExByG,gBAAiB,CACfC,WAAYlG,EAAMR,QAAQ,GAC1B2G,YAAanG,EAAMR,QAAQ,IAE7B4G,KAAM,CACJF,WAAYlG,EAAMR,QAAQ,GAC1B6G,UAAWrG,EAAMR,QAAQ,IAE3B8G,UAAW,CACTD,UAAWrG,EAAMR,QAAQ,GACzB2G,YAAanG,EAAMR,QAAQ,IAE7Bc,YAAa,CACXD,OAAQL,EAAMR,QAAQ,GACtBN,SAAU,SAKC,SAASqH,KACtB,IASqB9C,EATfrE,EAAUL,KADkB,EAIXyC,IAAMC,WAAWC,IAAjCC,EAJ2B,sBAONH,IAAM0B,SAAS,CACzCrB,KAAM,eAR0B,mBAO3ByB,EAP2B,KAOnBC,EAPmB,OAkBN/B,IAAM0B,SAAS,IAlBT,mBAkB3BpB,EAlB2B,KAkBnB0E,EAlBmB,OAmCRhF,IAAM0B,SAAS,IAnCP,mBAmC3BuD,EAnC2B,KAmCpBC,EAnCoB,KAkFlC,OACE,yBAAKrH,UAAWD,EAAQe,MACtB,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,qCAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,8NAKF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAE9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,GAAIC,GAAI,GAAIrE,GAAI,IAG7B,kBAACsE,GAAA,EAAD,CAAa3E,UAAWsH,YAAKvH,EAAQkB,cACnC,kBAAC2D,GAAA,EAAD,CAAYC,GAAG,qBAAf,gBACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHN,MAAON,EAAOzB,KACdwC,UAhGSZ,EAgGc,OAhGN,SAAAC,GAC3BJ,EAAOG,GAAQC,EAAMC,OAAOC,MAC5BL,EAAU,CACR1B,KAAMyB,EAAOzB,UA+FL,kBAACyC,GAAA,EAAD,CAAUV,MAAO,cAAjB,wCACA,kBAACU,GAAA,EAAD,CAAUV,MAAO,SAAjB,2EAGJ,kBAACjE,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,QAAQ,SAASvH,UAAWsH,YAAKvH,EAAQ6G,kBAAlE,KAIA,kBAACY,GAAA,EAAD,CAAKD,QAAQ,UACX,kBAACjH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,QAAQ,SAAS9F,MAAM,aA/D1D,SAAsBe,EAAMC,EAAQ2E,GAGlC,IAAM1E,EAAwBJ,EAAcI,sBACtCC,EAAwBL,EAAcK,iBAGxCC,EAAc,EACL,eAATJ,EACFI,EAAcF,EACI,UAATF,IACTI,EAAcD,GAMhB,IAAIe,EAAY,EAQhB,OAPc,IAAV0D,EACF1D,EAAYjB,EACH2E,EAAQ,IAEjB1D,EAAcjB,EAASG,EAAewE,EAAS3E,GAEjDiB,EAAYC,KAAKC,MAAMF,GAwCZ+D,CAAaxD,EAAOzB,KAAMC,EAAQ2E,KAIvC,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,QAAQgH,QAAQ,SAASvH,UAAWD,EAAQgH,MAAhE,OAKF,kBAAC9G,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,GAAIC,GAAI,GAAIrE,GAAI,IAC7B,yBAAKL,UAAWD,EAAQkH,WACtB,yBAAKjH,UAAWD,EAAQiB,QACtB,kBAACV,EAAA,EAAD,CAAYN,UAAWD,EAAQ4G,YAAa9B,GAAG,gBAAgBrE,cAAY,GAA3E,gBAIA,kBAACkH,GAAA,EAAD,CACEnD,MAAO9B,EACPkF,kBAAgB,gBAChBrC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNoC,MAtHM,CAClB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,UA8GT0C,kBAAkB,KAClB7C,SA3HmB,SAACX,EAAOyD,GACvCX,EAAUW,OA6HF,yBAAK9H,UAAWD,EAAQiB,QACtB,kBAACV,EAAA,EAAD,CAAYN,UAAWD,EAAQ4G,YAAa9B,GAAG,eAAerE,cAAY,GAA1E,gBAGA,kBAACkH,GAAA,EAAD,CACEnD,MAAO6C,EACPO,kBAAgB,eAChBrC,IAAK,EACLC,IAAK,GACLC,KAAM,EACNoC,MApHK,CACjB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,aAgHR0C,kBAAkB,KAClB7C,SAzHkB,SAACX,EAAOyD,GACtCT,EAASS,WC1Eb,IAAMpI,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCG,KAAM,CACJ,uBAAwB,CACtBE,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXF,QAAS,CACPG,aAAcF,EAAMR,QAAQ,QAK1Be,GAAkBC,aAAW,SAACR,GAAD,MAAY,CAC7CS,KAAM,CACJC,gBAAiBV,EAAMW,QAAQC,OAAOC,MACtCC,MAAOd,EAAMW,QAAQC,OAAOG,OAE9BC,KAAM,CACJC,SAAU,OANUT,CAQpBU,MAGEC,GAAiBX,aAAW,SAACR,GAAD,MAAY,CAC5CG,KAAM,CACJ,qBAAsB,CACpBO,gBAAiBV,EAAMW,QAAQS,OAAOC,WAHrBb,CAMnBc,MAEW,SAAS8F,KACtB,IAyBqB3D,EAzBfrE,EAAUL,KADiB,EAILyC,IAAM0B,SAAS,CACzCH,UAAW,GACXsE,YAAa,CACX,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,MAtBoB,mBAI1B/D,EAJ0B,KAIlBC,EAJkB,KAkEjC,OACE,yBAAKlE,UAAWD,EAAQe,MACtB,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,kDAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,qMAIF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAE9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC6E,GAAA,EAAD,CACEL,GAAG,YACHM,MAAM,kBACN3C,KAAK,SACLwC,UA3DWZ,EA2DY,YA3DJ,SAAAC,GAC3BJ,EAAOG,GAAQI,OAAOH,EAAMC,OAAOC,OACnC,IAAMb,EAAiC,IAArBO,EAAOP,UAAkB,GAAKO,EAAOP,UAuBjDsE,EApBc,CAClB,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,KACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,MAIiBvB,KAAI,SAACwB,GAMnC,OAL4BA,EAAWxB,KAAI,SAACyB,GAC1C,IAAIzF,EAASiB,EAAY,IAAMwE,EAE/B,OADAzF,GAAmBA,EAAS,UAMhCyB,EAAU,CACRR,UAAWA,EACXsE,YAAaA,MAwBPzD,MAAON,EAAOP,UACd0B,WAAY,CACVC,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAAKC,KAAM,KACtCC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,YAIX,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACyF,GAAA,EAAD,CAAgBC,UAAWC,MACzB,kBAACC,GAAA,EAAD,CAAOjG,UAAWD,EAAQH,MAAOsG,KAAK,QAAQC,aAAW,iBACvD,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,eACA,kBAAC,GAAD,mCACA,kBAAC,GAAD,mCACA,kBAAC,GAAD,mCACA,kBAAC,GAAD,mCACA,kBAAC,GAAD,qCAGJ,kBAACC,GAAA,EAAD,KACGpC,EAAO+D,YAAYvB,KAAI,SAACwB,EAAYE,GAAb,OACtB,kBAAC,GAAD,CAAgBzB,IAAKyB,GACnB,kBAAC,GAAD,KAAkBA,EAAK,GACvB,kBAAC,GAAD,KAAkBF,EAAW,IAC7B,kBAAC,GAAD,KAAkBA,EAAW,IAC7B,kBAAC,GAAD,KAAkBA,EAAW,IAC7B,kBAAC,GAAD,KAAkBA,EAAW,IAC7B,kBAAC,GAAD,KAAkBA,EAAW,c,0JClJ3CvI,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCG,KAAM,CACJ,uBAAwB,CACtBE,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXF,QAAS,CACPG,aAAcF,EAAMR,QAAQ,IAE9BiI,MAAO,CACLC,OAAQ,iBACRxI,SAAU,KAEZoB,YAAa,CACXD,OAAQL,EAAMR,QAAQ,GACtBN,SAAU,KAEZoH,UAAW,CACTD,UAAWrG,EAAMR,QAAQ,GACzB2G,YAAanG,EAAMR,QAAQ,IAE7Ba,OAAQ,CACNA,OAAQL,EAAMR,QAAQ,IAExBmI,MAAO,CACL1G,SAAU,QACVH,MAAO,QAET8G,KAAM,CACJhB,QAAS,YASPiB,GAAgB,CACpB,KAAQ,CACN,WAAc,CACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,MAAS,CACP,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,SAAY,CACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,OAGzB,OAAU,CACR,WAAc,CACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,KAChB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,MAAS,CACP,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,KACjB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,SAAY,CACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,QAoB3B,SAASC,GAAajG,EAAMkG,EAAQC,EAAYlG,GAE9C,IAGMmG,EAHUJ,GAAcE,GAAQlG,GAGdiE,KAAI,SAACoC,GAI3B,OAHcA,EAAMpC,KAAI,SAACqC,GACvB,OAjBN,SAAeA,GACb,OAAOnF,KAAKC,MAAMkF,EAAG,QAgBVC,CAAMD,SAgBbE,EAAQJ,EAAQK,WAAU,SAACC,EAAOF,GACpC,OAAQL,EAAaC,EAAQI,GAAO,IAAML,GAAcC,EAAQI,EAAQ,GAAG,MAE7EA,GAAgB,EACD,SAAXN,GAA+B,KAAVM,IACvBA,EAAQ,IAEK,WAAXN,GAAiC,KAAVM,IACzBA,EAAQ,IAMV,IAAIG,EAAc,EAEhBA,EADE1G,GAAUmG,EAAQI,GAAO,GACb,EACJvG,GAAUmG,EAAQI,GAAO,IAAQvG,EAASmG,EAAQI,GAAO,GACrD,EACJvG,GAAUmG,EAAQI,GAAO,IAAQvG,EAASmG,EAAQI,GAAO,GACrD,EACJvG,GAAUmG,EAAQI,GAAO,IAAQvG,EAASmG,EAAQI,GAAO,GACrD,GACJvG,GAAUmG,EAAQI,GAAO,IAAiBJ,EAAQI,GAAO,GACrD,GAOhB,IAAMI,EAAY,CAChB,CAAClB,EAAG,EAAGmB,EAAGT,EAAQI,GAAO,IACzB,CAACd,EAAG,EAAGmB,EAAGT,EAAQI,GAAO,IACzB,CAACd,EAAG,EAAGmB,EAAGT,EAAQI,GAAO,IACzB,CAACd,EAAG,EAAGmB,EAAGT,EAAQI,GAAO,IACzB,CAACd,EAAG,EAAGmB,EAAGT,EAAQI,GAAO,KAIrBM,EAAS,CACbpB,EAAGiB,EACHE,EAAG5G,GAKC8G,EAAiBX,EAAQI,GAAO,GAClCQ,EAAa,GAmBjB,OAlBID,EAAiB,KAAO9G,EAAS,IACnC+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,KAC/BD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,KAC1BD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,KACrBD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,MACjBD,GAAkB,KAAO9G,GAAU,OAC5C+G,EAAa,CAAC,EAAG,GAAI,MAGR,CACb,UAAaJ,EACb,OAAUE,EACV,WAAcE,G,IASZC,G,2KACM,IAAD,EACgBC,KAAKC,MAArBzB,EADA,EACAA,EAAGmB,EADH,EACGA,EACJO,EAAoB,SAFnB,EACMlB,OACuB,eAAO,eAC3C,OACE,0BAAMR,EAAGA,EAAGmB,EAAGA,EAAGzH,SAAU,IACzBgI,O,GANWzH,IAAM0H,WAoBX,SAASC,KACtB,IAAM/J,EAAUL,KADc,EAIFyC,IAAM0B,SAAS,CACzCrB,KAAM,aACNkG,OAAQ,SANoB,mBAIvBzE,EAJuB,KAIfC,EAJe,KAQxBC,EAAe,SAAAC,GAAI,OAAI,SAAAC,GAC3BJ,EAAOG,GAAQC,EAAMC,OAAOC,MAC5BL,EAAU,eACLD,MAXuB,EAgBF9B,IAAM0B,SAAS,IAhBb,mBAgBvBpB,EAhBuB,KAgBf0E,EAhBe,OAmCMhF,IAAM0B,SAAS,IAnCrB,mBAmCvB8E,EAnCuB,KAmCXoB,EAnCW,KAqD9B,OACE,yBAAK/J,UAAWD,EAAQe,MACtB,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,qDAKF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAG9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACsE,GAAA,EAAD,CAAa3E,UAAWsH,YAAKvH,EAAQkB,cACnC,kBAAC2D,GAAA,EAAD,CAAYC,GAAG,qBAAf,gBACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHN,MAAON,EAAOzB,KACdwC,SAAUb,EAAa,SAEvB,kBAACc,GAAA,EAAD,CAAUV,MAAM,cAAhB,wCACA,kBAACU,GAAA,EAAD,CAAUV,MAAM,SAAhB,kCACA,kBAACU,GAAA,EAAD,CAAUV,MAAM,YAAhB,0CAIJ,kBAACI,GAAA,EAAD,CAAa3E,UAAWsH,YAAKvH,EAAQkB,cACnC,kBAAC+I,GAAA,EAAD,CAAWjE,UAAU,SAAS/F,UAAWD,EAAQuI,OAAjD,gBACA,kBAAC2B,GAAA,EAAD,CACE9D,aAAW,SACX+D,KAAK,SACL3F,MAAON,EAAOyE,OACd1D,SAAUb,EAAa,WACvB,yBAAKnE,UAAWD,EAAQwI,MACtB,kBAAC4B,GAAA,EAAD,CAAkB5F,MAAM,OAAO6F,QAAS,kBAACC,GAAA,EAAD,MAAWlF,MAAM,eAAKmF,QAA2B,SAAlBrG,EAAOyE,SAC9E,kBAACyB,GAAA,EAAD,CAAkB5F,MAAM,SAAS6F,QAAS,kBAACC,GAAA,EAAD,MAAWlF,MAAM,eAAKmF,QAA2B,WAAlBrG,EAAOyE,aAMxF,kBAACzI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYN,UAAWD,EAAQuI,MAAOzD,GAAG,gBAAgBrE,cAAY,GAArE,gBAGA,kBAACkH,GAAA,EAAD,CACEnD,MAAOoE,EACPhB,kBAAgB,gBAChBrC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNoC,MAnEc,CACtB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,gBA0Db0C,kBAAkB,KAClB7C,SAxE2B,SAACX,EAAOyD,GAC3CiC,EAAcjC,MAyER,kBAACxH,EAAA,EAAD,CAAYN,UAAWD,EAAQuI,MAAOzD,GAAG,gBAAgBrE,cAAY,GAArE,4BAGA,kBAACkH,GAAA,EAAD,CACEnD,MAAO9B,EACPkF,kBAAgB,gBAChBrC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNoC,MAnGU,CAClB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,gBAyFb0C,kBAAkB,KAClB7C,SAxGuB,SAACX,EAAOyD,GACvCX,EAAUW,OA2GN,kBAAC7H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,yBAAKL,UAAWD,EAAQqI,OACtB,kBAAC,KAAD,CAEEmC,MAAM,2BACN5J,MAAO6J,KAAaC,SACpBC,OAAQ,IACR9J,MAAO,IACP+J,cAAe,CACbzC,EAAG,IAEL0C,QAAS,CAAEC,SAAU,IAAMC,OAAQ,UACnCC,mBAAoB,kBAAC,KAAD,OAGpB,kBAAC,KAAD,CACEC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBxB,WAAY,CAAC,8DAAkB,qBAAO,qBAAO,qBAAO,4BACpDyB,MAAO,CACLC,UAAW,CAACtJ,SAAU,EAAGuJ,QAAS,IAClCC,MAAO,CAACC,OAAQ,OAAQnF,KAAM,GAC9BoF,WAAY,CAAC1J,SAAU,EAAG2J,KAAM,OAAQJ,QAAS,MAGrD,kBAAC,KAAD,CACEK,eAAa,EACbhC,WAAYf,GAAaxE,EAAOzB,KAAMyB,EAAOyE,OAAQC,EAAYlG,GAArD,WACZwI,MAAO,CACLC,UAAW,CAACtJ,SAAU,EAAGuJ,QAAS,IAClCC,MAAO,CAACC,OAAQ,UAAWnF,KAAM,GACjCoF,WAAY,CAAC1J,SAAU,EAAG2J,KAAM,OAAQJ,QAAS,MAGrD,kBAAC,KAAD,CAAYM,YAAU,EACVC,KAAMjD,GAAaxE,EAAOzB,KAAMyB,EAAOyE,OAAQC,EAAYlG,GAArD,UACNwI,MAAO,CACLS,KAAM,CAACH,KAAM,UAAW3K,MAAO,IAC/B+K,OAAQ,CAAC/J,SAAU,EAAG2J,KAAM,SAE9BI,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBjI,KAAKC,MAAMgI,EAAMvC,GAAnC,SAEpB,kBAAC,KAAD,CACE4B,MAAO,CACLU,OAAQ,CAAC/J,SAAU,EAAG2J,KAAM,UAAWM,WAAW,QAEpDjB,QAAS,CACPkB,OAAQ,CACNjB,SAAU,IACVkB,OAAQ,iBAAO,CAAEC,GAAI,EAAGC,QAAS,IACjCC,MAAO,SAACN,GAAD,MAAY,CAAEI,GAAIJ,EAAMI,GAAIC,QAAS,MAGhDE,eAAgB,kBAAC,KAAD,CAAcC,GAAI,EAAGC,GAAI,KACzCV,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,qBAAuBjI,KAAKC,MAAMgI,EAAMvC,GAAxC,OACRnD,KAAM,EACNoG,cAAe,kBAAC,GAAD,CAAO5D,OAAQzE,EAAOyE,SACrCgD,KAAM,CACJjD,GAAaxE,EAAOzB,KAAMyB,EAAOyE,OAAQC,EAAYlG,GAArD,e,sDC9bZ/C,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCG,KAAM,CACJ,uBAAwB,CACtBE,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXF,QAAS,CACPG,aAAcF,EAAMR,QAAQ,IAE9Bc,YAAa,CACXD,OAAQL,EAAMR,QAAQ,GACtBN,SAAU,KAEZoH,UAAW,CACTD,UAAWrG,EAAMR,QAAQ,GACzB2G,YAAanG,EAAMR,QAAQ,IAE7Ba,OAAQ,CACNA,OAAQL,EAAMR,QAAQ,IAExBmI,MAAO,CACL1G,SAAU,QACVH,MAAO,QAET8G,KAAM,CACJhB,QAAS,QAEXa,MAAO,CACLC,OAAQ,iBACRxI,SAAU,SAUR2I,GAAgB,CACpB,KAAQ,CACN,WAAc,CACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,MAAS,CACP,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,SAAY,CACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,OAGzB,OAAU,CACR,WAAc,CACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,KAChB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,KAClB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,MAAS,CACP,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,KACjB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEvB,SAAY,CACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KACnB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,QAsB3B,SAASC,GAAajG,EAAMkG,EAAQC,EAAYlG,GAC9C,IAGMmG,EAHUJ,GAAcE,GAAQlG,GAGdiE,KAAI,SAACoC,GAI3B,OAHcA,EAAMpC,KAAI,SAACqC,GACvB,OAlBN,SAAeA,GACb,OAAOnF,KAAKC,MAAMkF,EAAG,QAiBVC,CAAMD,SAgBbE,EAAQJ,EAAQK,WAAU,SAACC,EAAOqD,GACpC,OAAQ5D,EAAaC,EAAQ2D,GAAK,IAAM5D,GAAcC,EAAQ2D,EAAM,GAAG,MAEzEvD,GAAgB,EACD,SAAXN,GAA+B,KAAVM,IACvBA,EAAQ,IAEK,WAAXN,GAAiC,KAAVM,IACzBA,EAAQ,IAKV,IAAMO,EAAiBX,EAAQI,GAAO,GAClCQ,EAAa,GACbD,EAAiB,KAAO9G,EAAS,IACnC+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,KAC/BD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,KAC1BD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,IAAK,KACrBD,GAAkB,KAAOA,EAAiB,KAAS9G,GAAU,KAAOA,EAAS,IACvF+G,EAAa,CAAC,EAAG,GAAI,IAAK,MACjBD,GAAkB,KAAO9G,GAAU,OAC5C+G,EAAa,CAAC,EAAG,GAAI,MAMvB,IAAMgD,EAAW7I,KAAKC,MAAMgF,EAAQI,GAAO,IACrCyD,EAAW9I,KAAKC,MAAMgF,EAAQI,GAAO,IACrC0D,EAAW/I,KAAKC,MAAMgF,EAAQI,GAAO,IACrC2D,EAAWhJ,KAAKC,MAAMgF,EAAQI,GAAO,IACrC4D,EAAWjJ,KAAKC,MAAMgF,EAAQI,GAAO,IAuB3C,MANe,CACb,UAhBgB,CAChB,CAACd,EAAG,EAAGmB,EAAGmD,EAAUrH,MAAM,wBAAD,OAAUqH,EAAV,cACzB,CAACtE,EAAG,EAAGmB,EAAGoD,EAASD,EAAUrH,MAAM,wBAAD,OAAUsH,EAAV,cAClC,CAACvE,EAAG,EAAGmB,EAAGqD,EAASD,EAAUtH,MAAM,wBAAD,OAAUuH,EAAV,cAClC,CAACxE,EAAG,EAAGmB,EAAGsD,EAASD,EAAUvH,MAAM,wBAAD,OAAUwH,EAAV,cAClC,CAACzE,EAAG,EAAGmB,EAAGuD,EAASD,EAAUxH,MAAM,8BAAD,OAAWyH,EAAX,cAClC,CAAC1E,EAAG,EAAGmB,EAAGG,EAAWA,EAAWqD,OAAO,GAAGD,IAW1C,OAPa,CACb1E,EAAG,EACHmB,EAAG5G,GAMH,WAAc+G,G,IAUZC,G,2KACM,IAAD,EACgBC,KAAKC,MAArBzB,EADA,EACAA,EAAGmB,EADH,EACGA,EACJO,EAAoB,SAFnB,EACMlB,OACuB,eAAO,eAC3C,OACE,0BAAMR,EAAGA,EAAGmB,EAAGA,EAAGzH,SAAU,IACzBgI,O,GANWzH,IAAM0H,WAkBX,SAASC,KACtB,IAAM/J,EAAUL,KADc,EAIFyC,IAAM0B,SAAS,CACzCrB,KAAM,aACNkG,OAAQ,SANoB,mBAIvBzE,EAJuB,KAIfC,EAJe,KAQxBC,EAAe,SAAAC,GAAI,OAAI,SAAAC,GAC3BJ,EAAOG,GAAQC,EAAMC,OAAOC,MAC5BL,EAAU,eACLD,MAXuB,EAgBF9B,IAAM0B,SAAS,IAhBb,mBAgBvBpB,EAhBuB,KAgBf0E,EAhBe,OAmCMhF,IAAM0B,SAAS,IAnCrB,mBAmCvB8E,EAnCuB,KAmCXoB,EAnCW,KAoDxB+C,EAAYrE,GAAaxE,EAAOzB,KAAMyB,EAAOyE,OAAQC,EAAYlG,GAEvE,OACE,yBAAKzC,UAAWD,EAAQe,MACtB,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,wCAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,+LAKF,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAST,UAAWD,EAAQW,WAG9B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACsE,GAAA,EAAD,CAAa3E,UAAWsH,YAAKvH,EAAQkB,cACnC,kBAAC2D,GAAA,EAAD,CAAYC,GAAG,qBAAf,gBAGA,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHN,MAAON,EAAOzB,KACdwC,SAAUb,EAAa,SAEvB,kBAACc,GAAA,EAAD,CAAUV,MAAM,cAAhB,wCACA,kBAACU,GAAA,EAAD,CAAUV,MAAM,SAAhB,kCACA,kBAACU,GAAA,EAAD,CAAUV,MAAM,YAAhB,0CAIJ,kBAACI,GAAA,EAAD,CAAa3E,UAAWsH,YAAKvH,EAAQkB,cACnC,kBAAC+I,GAAA,EAAD,CAAWjE,UAAU,SAAS/F,UAAWD,EAAQuI,OAAjD,gBACA,kBAAC2B,GAAA,EAAD,CACE9D,aAAW,SACX+D,KAAK,SACL3F,MAAON,EAAOyE,OACd1D,SAAUb,EAAa,WACvB,yBAAKnE,UAAWD,EAAQwI,MACtB,kBAAC4B,GAAA,EAAD,CAAkB5F,MAAM,OAAO6F,QAAS,kBAACC,GAAA,EAAD,MAAWlF,MAAM,eAAKmF,QAA2B,SAAlBrG,EAAOyE,SAC9E,kBAACyB,GAAA,EAAD,CAAkB5F,MAAM,SAAS6F,QAAS,kBAACC,GAAA,EAAD,MAAWlF,MAAM,eAAKmF,QAA2B,WAAlBrG,EAAOyE,aAMxF,kBAACzI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYN,UAAWD,EAAQuI,MAAOzD,GAAG,gBAAgBrE,cAAY,GAArE,gBAGA,kBAACkH,GAAA,EAAD,CACEnD,MAAOoE,EACPhB,kBAAgB,gBAChBrC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNoC,MAzEc,CACtB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,gBAgEb0C,kBAAkB,KAClB7C,SA9E2B,SAACX,EAAOyD,GAC3CiC,EAAcjC,MA+ER,kBAACxH,EAAA,EAAD,CAAYN,UAAWD,EAAQuI,MAAOzD,GAAG,gBAAgBrE,cAAY,GAArE,4BAGA,kBAACkH,GAAA,EAAD,CACEnD,MAAO9B,EACPkF,kBAAgB,gBAChBrC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNoC,MAzGU,CAClB,CAAErD,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,GAAIY,MAAO,MACpB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,OACrB,CAAEZ,MAAO,IAAKY,MAAO,gBA+Fb0C,kBAAkB,KAClB7C,SA9GuB,SAACX,EAAOyD,GACvCX,EAAUW,OAiHN,kBAAC7H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,yBAAKL,UAAWD,EAAQqI,OACtB,kBAAC,KAAD,CACEzH,MAAO6J,KAAaC,SACpBG,QAAS,CAAEC,SAAU,IAAKiB,OAAQ,CAACjB,SAAU,MAAOC,OAAQ,UAC5DC,mBAAoB,kBAAC,KAAD,MACpBL,OAAQ,IACR9J,MAAO,KAEP,kBAAC,KAAD,CACE4I,WAAY,CAAC,sBACbyB,MAAO,CACLG,MAAO,CAACC,OAAQ,UAAWnF,KAAM,GACjCoF,WAAY,CAAC1J,SAAU,GAAI2J,KAAM,OAAQJ,QAAS,MAGtD,kBAAC,KAAD,CACEK,eAAa,EACbhC,WAAYsD,EAAUtD,WACtByB,MAAO,CACLG,MAAO,CAACC,OAAQ,UAAWnF,KAAM,GACjCoF,WAAY,CAAC1J,SAAU,GAAI2J,KAAM,OAAQJ,QAAS,MAGtD,kBAAC,KAAD,CACEM,YAAU,EACVsB,WAAY,CAACC,KAAO,IAAKA,KAAO,KAAMA,KAAO,KAAMA,KAAO,KAAMA,KAAO,KAAMA,KAAO,MACpF/B,MAAO,CACLS,KAAM,CAAE9K,MAAO,IACf+K,OAAQ,CAAER,SAAU,GAAIjF,KAAM,IAEhCiG,eACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAcC,IAAK,GAAInB,MAAO,CAACrJ,SAAU,GAAI2J,KAAM,aAIvD,kBAAC,KAAD,CACEG,KAAM,CACJoB,EAAU1D,UAAU,MAKxB,kBAAC,KAAD,CACEsC,KAAM,CACJoB,EAAU1D,UAAU,MAGxB,kBAAC,KAAD,CACEsC,KAAM,CACJoB,EAAU1D,UAAU,MAGxB,kBAAC,KAAD,CACEsC,KAAM,CACJoB,EAAU1D,UAAU,MAGxB,kBAAC,KAAD,CACEsC,KAAM,CACJoB,EAAU1D,UAAU,MAGxB,kBAAC,KAAD,CACEsC,KAAM,CACJoB,EAAU1D,UAAU,OAI1B,kBAAC,KAAD,CACEkD,cAAe,kBAAC,GAAD,CAAO5D,OAAQzE,EAAOyE,SACrCyD,eAAgB,kBAAC,KAAD,CAAcC,GAAI,EAAGC,IAAK,KAC1CV,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,qBAAuBjI,KAAKC,MAAMgI,EAAMvC,GAAxC,QACR4B,MAAO,CACLU,OAAQ,CAAC/J,SAAU,GAAI2J,KAAM,UAAWM,WAAW,QAErDjB,QAAS,CACPC,SAAU,IACViB,OAAQ,CACNjB,SAAU,KACVkB,OAAQ,iBAAO,CAAEC,GAAI,EAAGC,QAAS,IACjCC,MAAO,SAACN,GAAD,MAAY,CAAEI,GAAIJ,EAAMI,GAAIC,QAAS,MAGhDP,KAAM,CACJoB,EAAUxD,WAIhB,kBAACrJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,+EAEE,kBAAC4M,GAAA,EAAD,CAAMC,KAAK,mDAAmDzL,MAAM,gBAAgB6C,OAAO,SAAS6I,IAAI,cAAxG,sBAFF,U,2CCvcRzN,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCG,KAAM,CACJyG,QAAS,QAEX6F,KAAM,CACJ,uBAAwB,CACtBpM,OAAQL,EAAMR,QAAQ,GACtBS,MAAO,SAGXyM,OAAQ,CACNC,OAAQ3M,EAAM2M,OAAOC,OAAS,EAC9BC,WAAY7M,EAAM8M,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD5C,OAAQnK,EAAM8M,YAAY3C,OAAO6C,MACjC9C,SAAUlK,EAAM8M,YAAY5C,SAAS+C,iBAGzCC,kBAAmB,CACjBlI,SAAU,YAEZmI,YAAa,CACXjH,WAtBgB,IAuBhBjG,MAAM,eAAD,OAvBW,IAuBX,OACL4M,WAAY7M,EAAM8M,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD5C,OAAQnK,EAAM8M,YAAY3C,OAAO6C,MACjC9C,SAAUlK,EAAM8M,YAAY5C,SAASkD,kBAGzCC,WAAY,CACVlH,YAAa,IAEfyD,MAAO,CACLxJ,SAAU,GAEZkN,KAAM,CACJ1G,QAAS,QAEXgG,OAAQ,CACN3M,MAvCgB,IAwChBsN,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVxN,MA5CgB,IA6ChB4M,WAAY7M,EAAM8M,YAAYC,OAAO,QAAS,CAC5C5C,OAAQnK,EAAM8M,YAAY3C,OAAO6C,MACjC9C,SAAUlK,EAAM8M,YAAY5C,SAASkD,kBAGzCM,YAAY,aACVb,WAAY7M,EAAM8M,YAAYC,OAAO,QAAS,CAC5C5C,OAAQnK,EAAM8M,YAAY3C,OAAO6C,MACjC9C,SAAUlK,EAAM8M,YAAY5C,SAAS+C,gBAEvCU,UAAW,SACX1N,MAAOD,EAAMR,QAAQ,GAAK,GACzBQ,EAAM4N,YAAYC,GAAG,MAAQ,CAC5B5N,MAAOD,EAAMR,QAAQ,GAAK,IAG9BsO,QAAQ,aACNlH,QAAS,OACTmH,WAAY,SACZC,eAAgB,WAChBxD,QAASxK,EAAMR,QAAQ,EAAG,IAEvBQ,EAAMiO,OAAOH,SAElBI,QAAS,CACP9N,SAAU,EACVoK,QAASxK,EAAMR,QAAQ,QAM3B,SAAS2O,GAAW3J,EAAO4J,EAAOC,GAChC,MAAO,CAAE7J,QAAO4J,QAAOC,YAGzB,IAAMC,GAAQ,CAEZH,GAAW,2BAAQ,QAAS,sBAC5BA,GAAW,uCAAU,QAAS,kBAC9BA,GAAW,uBAAS,SAAU,iBAC9BA,GAAW,oCAAY,YAAa,qBACpCA,GAAW,iDAAe,WAAY,gBAyBxC,IAAMI,GAAa/M,IAAMgN,YAAW,SAAoBxF,EAAOyF,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASzF,OAIhCtH,GAAgBF,IAAMoN,gBAEpB,SAASC,KAAwB,IAAD,IACvCzP,EAAUL,KACViB,EAAQ8O,cAF+B,EAKrBtN,IAAM0B,UAAS,GALM,mBAKtC6L,EALsC,KAKhCC,EALgC,KASvCC,EAAoB,WACxBD,GAAQ,IAVmC,EAcHxN,IAAM0B,SAAS,CACvDnB,sBAAuB,GACvBC,iBAAkB,OAhByB,mBActCL,EAdsC,KAcvBuN,EAduB,OAoBL1N,IAAM0B,UAAS,GApBV,mBAoBtCiM,EApBsC,KAoBxBC,EApBwB,KAwBvCC,EAAc,WAClBD,GAAgB,IAGlB,SAASE,EAAMtG,GACb,OAAO,kBAAC,KAAD,eAAUuG,UAAW,EAAG3P,QAAQ,UAAaoJ,IAQtD,IAAMwG,EAA0B,SAAA/L,GAAI,OAAI,SAAAC,GACtC/B,EAAc8B,GAAQI,OAAOH,EAAMC,OAAOC,OAC1C,IAAM7B,EAAiE,IAAxCJ,EAAcI,sBAA8B,GAAKJ,EAAcI,sBACxFC,EAAuD,IAAnCL,EAAcK,iBAAyB,GAAKL,EAAcK,iBAEpFkN,EAAiB,CACfnN,sBAAuBA,EACvBC,iBAAkBA,MAItB,OACE,yBAAK3C,UAAWD,EAAQe,MACtB,kBAACsP,EAAA,EAAD,MACA,kBAAC,KAAD,KACA,kBAACC,EAAA,EAAD,CACE1K,SAAS,QACT3F,UAAWsH,YAAKvH,EAAQsN,OAAT,eACZtN,EAAQ+N,YAAc4B,KAGzB,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE9O,MAAM,UACN0E,aAAW,cACXqK,QAxDe,WACvBb,GAAQ,IAwDAc,KAAK,QACLzQ,UAAWsH,YAAKvH,EAAQiO,WAAT,eACZjO,EAAQkO,KAAOyB,KAGlB,kBAAC,IAAD,OAEF,kBAACpP,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWD,EAAQwK,MAAOmG,QAAM,IAGzD,kBAACH,EAAA,EAAD,CACE9O,MAAM,UACN0E,aAAW,cACXqK,QAvDc,WACtBT,GAAgB,IAuDRU,KAAK,QACLzQ,UAAWsH,YAAKvH,EAAQiO,WAAT,eACZjO,EAAQkO,KAAOyB,KAGlB,kBAAC,IAAD,SAKN,kBAACiB,EAAA,EAAD,CACEpQ,QAAQ,YACRP,UAAWsH,YAAKvH,EAAQwN,QAAT,mBACZxN,EAAQqO,WAAasB,GADT,cAEZ3P,EAAQsO,aAAeqB,GAFX,IAIf3P,QAAS,CACP6Q,MAAOtJ,aAAI,mBACRvH,EAAQqO,WAAasB,GADb,cAER3P,EAAQsO,aAAeqB,GAFf,MAMb,yBAAK1P,UAAWD,EAAQ0O,SACtB,kBAAC8B,EAAA,EAAD,CAAYC,QAASZ,GACE,QAApBjP,EAAM2O,UAAsB,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAGxD,kBAAC7O,EAAA,EAAD,MAEA,kBAACoQ,EAAA,EAAD,KACG5B,GAAMxI,KAAI,SAAClE,GAAD,OACT,kBAACuO,EAAA,EAAD,CAAUC,QAAM,EAACrK,IAAKnE,EAAI4C,MAAOY,UAAWkH,KAAM+D,GAAI,IAAMzO,EAAIwM,MAAOyB,QAASZ,GAC9E,kBAACqB,EAAA,EAAD,KAxId,SAAcjC,GACZ,OAAQA,GACN,IAAK,qBACH,OAAO,kBAAC,IAAD,MACT,IAAK,iBACH,OAAO,kBAAC,IAAD,MACT,IAAK,oBACH,OAAO,kBAAC,IAAD,MACT,IAAK,cACH,OAAO,kBAAC,IAAD,MACT,IAAK,gBACH,OAAO,kBAAC,IAAD,MACT,IAAK,oBACH,OAAO,kBAAC,IAAD,MACT,QACE,OAAO,kBAAC,IAAD,OA0HIkC,CAAK3O,EAAIyM,WAEZ,kBAACmC,EAAA,EAAD,CAAcC,QAAS7O,EAAI4C,aAKjC,kBAAC1E,EAAA,EAAD,OAGA,0BAAMT,UAAWD,EAAQ8O,SACvB,yBAAK7O,UAAWD,EAAQ0O,UAGxB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO4C,OAAK,EAACC,KAAK,KAChB,kBAACxR,EAAD,OAEF,kBAAC,KAAD,CAAOuR,OAAK,EAACC,KAAK,UAChB,kBAACxR,EAAD,OAEF,kBAAC,KAAD,CAAOuR,OAAK,EAACC,KAAK,WAEhB,kBAACjP,GAAckP,SAAf,CAAwBhN,MAAO,CAACjC,EAAeuN,IAC7C,kBAAC3N,GAAD,QAGJ,kBAAC,KAAD,CAAOmP,OAAK,EAACC,KAAK,cAChB,kBAACjP,GAAckP,SAAf,CAAwBhN,MAAO,CAACjC,EAAeuN,IAC7C,kBAAC3I,GAAD,QAGJ,kBAAC,KAAD,CAAOmK,OAAK,EAACC,KAAK,aAChB,kBAACvJ,GAAD,OAEF,kBAAC,KAAD,CAAOsJ,OAAK,EAACC,KAAK,SAChB,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,SAKN,6BACE,kBAACE,EAAA,EAAD,CAAQC,YAAU,EAAC/B,KAAMI,EAAc4B,QAAS1B,EAAa2B,oBAAqBzC,IAChF,kBAACmB,EAAA,EAAD,CAAQrQ,UAAWD,EAAQ8N,mBACzB,kBAACyC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYE,KAAK,QAAQhP,MAAM,UAAU+O,QAASR,EAAa7J,aAAW,SACxE,kBAAC,IAAD,OAEF,kBAAC7F,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWD,EAAQwK,OAA5C,4BAGA,kBAACqH,GAAA,EAAD,CAAQC,WAAS,EAACpQ,MAAM,UAAU+O,QAASR,GAA3C,kBAKJ,kBAACxI,GAAA,EAAD,CAAKxH,UAAWD,EAAQqN,KAAM7F,QAAQ,QAAQuK,aAAa,QAAQC,EAAG,GACpE,kBAAC9R,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,GAAIC,GAAI,GAAIrE,GAAI,IAC7B,kBAAC4P,EAAD,CAAO+B,SAAS,QAAhB,wIACwC,6BADxC,iLAE+B,6BAF/B,4MAGsC,6BACpC,oEAA0B,uBAAG9E,KAAM,uEAAwEzL,MAAM,gBAAgB6C,OAAQ,SAAU6I,IAAK,uBAA9H,0BAA1B,OAIJ,kBAAClN,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAAC6E,GAAA,EAAD,CACGL,GAAG,wBACHM,MAAM,mDACN3C,KAAK,SACLwC,SAAUmL,EAAwB,yBAClC5L,MAAOjC,EAAcI,sBACrB0C,WAAY,CACVC,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAAKC,KAAM,KAExCI,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,YAGZ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACqE,GAAI,EAAGC,GAAI,EAAGrE,GAAI,IAC3B,kBAAC6E,GAAA,EAAD,CACEL,GAAG,mBACHM,MAAM,kFACN3C,KAAK,SACLwC,SAAUmL,EAAwB,oBAClC5L,MAAOjC,EAAcK,iBACrByC,WAAY,CACVC,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAAKC,KAAK,KAEvCI,gBAAiB,CACfC,QAAQ,GAEV7E,OAAO,kBC5WPiR,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCZA1R,GAAQ2R,aAAe,CAC3BhR,QAAS,CACPkB,KAAM,UAIV+P,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,KAAD,CAAkB9R,MAAOA,IACzB,kBAAC,GAAD,QAGF+R,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.90079f31.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function About() {\n\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" gutterBottom>\n            マッスル計算機とは？\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography variant=\"body2\">\n            MAX重量計算など様々な計算が行えます。\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body2\">\n            左側のメニューを選択してください！\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from '@material-ui/core/Grid';\n\n// Appコンポーネントの詳細設定のコンテキスト\nimport { DetailOptions }  from './App';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: \"100%\",\n    minWidth: 250\n  },\n  divider: {\n    marginBottom: theme.spacing(3),\n  },\n  root: {\n    flexGrow: 1,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n  },\n}));\n\n// テーブルのヘッダデザイン\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// テーブルの隔行に色つける\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\n\nfunction createData(one, two, three, four, five, six, seven, eight, nine, ten) {\n  return { one, two, three, four, five, six, seven, eight, nine, ten};\n}\n\nexport default function RmConv() {\n  const classes = useStyles();\n\n  // Appコンポーネントの詳細設定\n  const [detailOptions]= React.useContext(DetailOptions)\n\n  /**\n   * 1行の重量データを作成\n   * @param {string} type 種目\n   * @param {number} weight 重量\n   * @returns {{nine: *, six: *, four: *, one: *, seven: *, ten: *, two: *, three: *, five: *, eight: *}} 1行分の重量データ\n   */\n  function row(type, weight) {\n\n    // Appコンポーネントの詳細設定で設定されている係数\n    const benchpressCoefficient = detailOptions.benchpressCoefficient;\n    const squatCoefficient      = detailOptions.squatCoefficient;\n\n    // 種目によって係数を変更\n    let coefficient = 0;\n    if (type === 'benchpress') {\n      coefficient = benchpressCoefficient;\n    } else if (type === 'squat') {\n      coefficient = squatCoefficient;\n    }\n\n    // 1行の重量 (12Rep分)\n    const maxWeightList = [];\n\n    // 1Rep目はそのまま設定\n    maxWeightList.push(weight);\n\n    // 2rep目から計算\n    for (let i = 2; i <= 10; i++) {\n      let maxWeight = ((weight / coefficient) * i) + weight;\n      maxWeight = Math.round(maxWeight);\n      maxWeightList.push(maxWeight);\n    }\n\n    return createData(\n      maxWeightList[0],\n      maxWeightList[1],\n      maxWeightList[2],\n      maxWeightList[3],\n      maxWeightList[4],\n      maxWeightList[5],\n      maxWeightList[6],\n      maxWeightList[7],\n      maxWeightList[8],\n      maxWeightList[9],\n    );\n  }\n\n  // Hooks\n  const [values, setValues] = React.useState({\n    type: 'benchpress',\n    startWeight: 60,\n    stepWeight: 2.5,\n    numberOfLines: 10,\n  });\n\n  /**\n   * 値変更時のハンドラー\n   * @param {Object} prop プロパティ\n   * @returns {void}\n   */\n  const handleChange = prop => event => {\n\n    values[prop] = event.target.value;\n\n    const startWeight = Number(values.startWeight);\n    const stepWeight = Number(values.stepWeight);\n    const numberOfLines = Number(values.numberOfLines);\n\n    setValues({\n      type: values.type,\n      startWeight: startWeight,\n      stepWeight: stepWeight,\n      numberOfLines: numberOfLines,\n    });\n  };\n\n  /**\n   * 換算表を作成して返す\n   * @param {string} type 種目\n   * @param {number} startWeight 開始重量\n   * @param {number} stepWeight 刻み重量\n   * @param {number} numberOfLines 行数\n   * @returns {[]} 換算表\n   */\n  function getRows (type, startWeight, stepWeight, numberOfLines)\n  {\n    // 行毎の重量保存用\n    let rows = [];\n    for (let i = 0; i < numberOfLines; i++) {\n      let lineStartweight = startWeight + (stepWeight * i);\n      rows.push(row(type, lineStartweight));\n    }\n    return rows;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            RM換算表\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            挙上重量と限界回数の表を作成します。\n            持ち上げられる重量と回数から、1回だけ持ち上げられる最大重量を知ることができます。\n            あるいは1回だけ持ち上げられる最大重量から、持ち上げられる重量と回数を知ることができます。\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"type-select-label\">種目</InputLabel>\n            {/* Select使うとStrictModeの違反ワーニングが出るがMaterial-UIは治すつもりはないらしい\n              @link https://github.com/mui-org/material-ui/issues/13221 */}\n            <Select\n              labelId=\"type-select-helper-label\"\n              id=\"type-select-helper\"\n              value={values.type}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value=\"benchpress\">ベンチプレス</MenuItem>\n              <MenuItem value=\"squat\">スクワット / デッドリフト</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item md={2} sm={6} xs={12}>\n          <TextField\n            id=\"startWeight\"\n            label=\"開始重量\"\n            type=\"number\"\n            onChange={handleChange('startWeight')}\n            value={values.startWeight}\n            InputProps={{\n              inputProps: { min: 0, max: 300, step: 2.5 },\n              endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n          />\n        </Grid>\n\n        <Grid item md={2} sm={6} xs={12}>\n          <TextField\n            id=\"stepWeight\"\n            label=\"刻み重量\"\n            type=\"number\"\n            onChange={handleChange('stepWeight')}\n            value={values.stepWeight}\n            InputProps={{\n              inputProps: { min: 2.5, max: 10, step: 2.5 },\n              endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item md={2} sm={6} xs={12}>\n          <TextField\n            id=\"numberOfLines\"\n            label=\"行数\"\n            type=\"number\"\n            onChange={handleChange('numberOfLines')}\n            value={values.numberOfLines}\n            InputProps={{\n              inputProps: { min: 1, max: 20, step: 1 },\n              endAdornment: <InputAdornment position=\"end\">行</InputAdornment>,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"RM換算表\">\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>重量 / Rep</StyledTableCell>\n                  <StyledTableCell>2</StyledTableCell>\n                  <StyledTableCell>3</StyledTableCell>\n                  <StyledTableCell>4</StyledTableCell>\n                  <StyledTableCell>5</StyledTableCell>\n                  <StyledTableCell>6</StyledTableCell>\n                  <StyledTableCell>7</StyledTableCell>\n                  <StyledTableCell>8</StyledTableCell>\n                  <StyledTableCell>9</StyledTableCell>\n                  <StyledTableCell>10</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {getRows(values.type, values.startWeight, values.stepWeight, values.numberOfLines).map((row) => (\n                  <StyledTableRow key={row.one}>\n                    <StyledTableCell>{row.one}</StyledTableCell>\n                    <StyledTableCell>{row.two}</StyledTableCell>\n                    <StyledTableCell>{row.three}</StyledTableCell>\n                    <StyledTableCell>{row.four}</StyledTableCell>\n                    <StyledTableCell>{row.five}</StyledTableCell>\n                    <StyledTableCell>{row.six}</StyledTableCell>\n                    <StyledTableCell>{row.seven}</StyledTableCell>\n                    <StyledTableCell>{row.eight}</StyledTableCell>\n                    <StyledTableCell>{row.nine}</StyledTableCell>\n                    <StyledTableCell>{row.ten}</StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n// Appコンポーネントの詳細設定のコンテキスト\nimport { DetailOptions }  from './App';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  divider: {\n    marginBottom: theme.spacing(3),\n  },\n  sliderLabel: {\n    fontSize: \"small\",\n    color: \"#fff\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  marginLeftRight: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  unit: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(4),\n  },\n  sliderBox: {\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n  },\n}));\n\n\nexport default function Maxweight() {\n  const classes = useStyles();\n\n  // Appコンポーネントの詳細設定\n  const [detailOptions]= React.useContext(DetailOptions)\n\n  // 種目 Hooks\n  const [values, setValues] = React.useState({\n    type: 'benchpress',\n  });\n  const handleChange = prop => event => {\n    values[prop] = event.target.value;\n    setValues({\n      type: values.type,\n    });\n  };\n\n  // 重量 Hooks\n  const [weight, setWeight] = React.useState(80);\n  const handleWeightSliderChange = (event, newValue) => {\n    setWeight(newValue);\n  }\n  const weightMarks = [\n    { value: 0, label: '0',},\n    { value: 25, label: '25',},\n    { value: 50, label: '50',},\n    { value: 75, label: '75',},\n    { value: 100, label: '100',},\n    { value: 125, label: '125',},\n    { value: 150, label: '150',},\n    { value: 175, label: '175',},\n    { value: 200, label: '200Kg',},\n  ];\n\n  // 回数 hook\n  const [count, setCount] = React.useState(10);\n  const handleCountSliderChange = (event, newValue) => {\n    setCount(newValue);\n  }\n  const countMarks = [\n    { value: 0, label: '0',},\n    { value: 5, label: '5',},\n    { value: 10, label: '10',},\n    { value: 15, label: '15',},\n    { value: 20, label: '20回',},\n  ];\n\n  /**\n   * 重量と回数から予測MAX重量を求める\n   * @param {string} type 種目\n   * @param {number} weight 挙上重量\n   * @param {number} count 回数\n   * @returns {number} 予測MAX重量\n   */\n  function getMaxWeight(type, weight, count) {\n\n    // Appコンポーネントの詳細設定で設定されている係数\n    const benchpressCoefficient = detailOptions.benchpressCoefficient;\n    const squatCoefficient      = detailOptions.squatCoefficient;\n\n    // 種目によって係数を変更\n    let coefficient = 0;\n    if (type === 'benchpress') {\n      coefficient = benchpressCoefficient;\n    } else if (type === 'squat') {\n      coefficient = squatCoefficient;\n    }\n\n    // MAX計算\n    // 回数が1であればその重量がMAXなのだから、入力された重量をMAX重量に設定\n    // 2以上で計算式をあてる\n    let maxWeight = 0;\n    if (count === 1) {\n      maxWeight = weight;\n    } else if (count > 1) {\n      // O’Conner式 MAX計算\n      maxWeight = ((weight / coefficient) * count) + weight;\n    }\n    maxWeight = Math.round(maxWeight);\n    return maxWeight;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            MAX重量計算機\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            重量と回数を入力することで、1回だけ持ち上げられる重量を知る事ができます。\n          </Typography>\n\n        </Grid>\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12}>\n          {/* Select使うとStrictModeの違反ワーニングが出るがMaterial-UIは治すつもりはないらしい\n              @link https://github.com/mui-org/material-ui/issues/13221 */}\n          <FormControl className={clsx(classes.formControl)}>\n            <InputLabel id=\"type-select-label\">種目</InputLabel>\n            <Select\n              labelId=\"type-select-helper-label\"\n              id=\"type-select-helper\"\n              value={values.type}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value={\"benchpress\"}>ベンチプレス</MenuItem>\n              <MenuItem value={\"squat\"}>スクワット / デッドリフト</MenuItem>\n            </Select>\n          </FormControl>\n          <Typography variant=\"h3\" display=\"inline\" className={clsx(classes.marginLeftRight)}>\n            =\n          </Typography>\n\n          <Box display=\"inline\">\n            <Typography variant=\"h3\" display=\"inline\" color=\"secondary\">\n              {getMaxWeight(values.type, weight, count)}\n            </Typography>\n          </Box>\n\n          <Typography variant=\"body1\" display=\"inline\" className={classes.unit}>\n            kg\n          </Typography>\n        </Grid>\n\n        <Grid item md={12} sm={12} xs={12}>\n          <div className={classes.sliderBox}>\n            <div className={classes.margin}>\n              <Typography className={classes.sliderLabel} id=\"weight-slider\" gutterBottom>\n                重量\n              </Typography>\n\n              <Slider\n                value={weight}\n                aria-labelledby=\"weight-slider\"\n                min={0}\n                max={200}\n                step={1}\n                marks={weightMarks}\n                valueLabelDisplay=\"on\"\n                onChange={handleWeightSliderChange}\n              />\n            </div>\n            <div className={classes.margin}>\n              <Typography className={classes.sliderLabel} id=\"count-slider\" gutterBottom>\n                回数\n              </Typography>\n              <Slider\n                value={count}\n                aria-labelledby=\"count-slider\"\n                min={0}\n                max={20}\n                step={1}\n                marks={countMarks}\n                valueLabelDisplay=\"on\"\n                onChange={handleCountSliderChange}\n              />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  divider: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\n// テーブルのヘッダデザイン\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// テーブルの隔行に色つける\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function Fivefive() {\n  const classes = useStyles();\n\n  // Hooks\n  const [values, setValues] = React.useState({\n    maxWeight: '',\n    weightTable: [\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n      [0,0,0,0,0],\n    ]\n  });\n\n  const handleChange = prop => event => {\n    values[prop] = Number(event.target.value);\n    const maxWeight = values.maxWeight === 0 ? '' : values.maxWeight;\n\n    // 係数 (100kgの時の重量)\n    const coefficient = [\n      [55,60,65,70,75],\n      [60,65,70,75,80],\n      [55,60,65,70,75],\n      [60,65,70,75,80],\n      [65,70,75,80,85],\n      [60,65,70,75,80],\n      [65,70,75,80,85],\n      [70,75,80,85,90],\n      [65,70,75,80,85],\n      [70,75,80,85,90],\n      [75,80,85,90,95],\n      [70,75,80,85,90],\n      [75,80,85,90,95],\n      [80,85,90,95,100],\n      [75,80,85,90,95],\n      [80,85,90,95,100]\n    ];\n\n    // 係数と最大重量を元に重量を変換していく\n    const weightTable = coefficient.map((weekWeight) => {\n      const convertedWeekWeight = weekWeight.map((x) => {\n        let weight = maxWeight / 100 * x;\n        weight = weight - (weight % 2.5);\n        return weight;\n      });\n      return convertedWeekWeight;\n    });\n\n    setValues({\n      maxWeight: maxWeight,\n      weightTable: weightTable,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            5x5法 メニュー生成\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            MAX重量を入力することで、5x5法でのトレーニングメニューを生成します。\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"maxWeight\"\n            label=\"MAX重量\"\n            type=\"number\"\n            onChange={handleChange('maxWeight')}\n            value={values.maxWeight}\n            InputProps={{\n              inputProps: { min: 0, max: 300, step: 2.5 },\n              endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>日</StyledTableCell>\n                  <StyledTableCell>1セット (5Rep)</StyledTableCell>\n                  <StyledTableCell>2セット (5Rep)</StyledTableCell>\n                  <StyledTableCell>3セット (5Rep)</StyledTableCell>\n                  <StyledTableCell>4セット (5Rep)</StyledTableCell>\n                  <StyledTableCell>5セット (5Rep)</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {values.weightTable.map((weekWeight, week) => (\n                  <StyledTableRow key={week}>\n                    <StyledTableCell>{week+1}</StyledTableCell>\n                    <StyledTableCell>{weekWeight[0]}</StyledTableCell>\n                    <StyledTableCell>{weekWeight[1]}</StyledTableCell>\n                    <StyledTableCell>{weekWeight[2]}</StyledTableCell>\n                    <StyledTableCell>{weekWeight[3]}</StyledTableCell>\n                    <StyledTableCell>{weekWeight[4]}</StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport clsx from \"clsx\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n\nimport { VictoryBar, VictoryChart, VictoryAxis,\n  VictoryTheme, VictoryScatter, VictoryVoronoiContainer, VictoryLabel } from 'victory';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  divider: {\n    marginBottom: theme.spacing(3),\n  },\n  graph: {\n    border: \"1px solid #ccc\",\n    minWidth: 250,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250,\n  },\n  sliderBox: {\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  Label: {\n    fontSize: \"small\",\n    color: \"#fff\",\n  },\n  flex: {\n    display: \"flex\",\n  },\n}));\n\n\n\n// 強度基準テーブル\n// 単位はポンド\n// @link https://startingstrength.com/files/standards.pdf\nconst strengthTable = {\n  'male': {\n    'benchpress': [\n      [0,0,0,0,0,0],\n      [114,84,107,130,179,222],\n      [123,91,116,142,194,242],\n      [132,98,125,153,208,260],\n      [148,109,140,172,234,291],\n      [165,119,152,187,255,319],\n      [181,128,164,201,275,343],\n      [198,135,173,213,289,362],\n      [220,142,183,225,306,381],\n      [242,149,190,232,316,395],\n      [275,153,196,239,325,407],\n      [319,156,199,244,333,416],\n      [453,159,204,248,340,425],\n      [999,999,999,999,999,999],\n    ],\n    'squat': [\n      [0,0,0,0,0,0],\n      [114,78,144,174,240,320],\n      [123,84,155,190,259,346],\n      [132,91,168,205,278,369],\n      [148,101,188,230,313,410],\n      [165,110,204,250,342,445],\n      [181,119,220,269,367,479],\n      [198,125,232,285,387,504],\n      [220,132,244,301,409,532],\n      [242,137,255,311,423,551],\n      [275,141,261,319,435,567],\n      [319,144,267,326,445,580],\n      [453,147,272,332,454,593],\n      [999,999,999,999,999,999],\n    ],\n    'deadlift': [\n      [0,0,0,0,0,0],\n      [114,97,179,204,299,387],\n      [123,105,194,222,320,414],\n      [132,113,209,239,342,438],\n      [148,126,234,269,380,482],\n      [165,137,254,293,411,518],\n      [181,148,274,315,438,548],\n      [198,156,289,333,457,567],\n      [220,164,305,351,479,586],\n      [242,172,318,363,490,596],\n      [275,176,326,373,499,602],\n      [319,180,333,381,506,608],\n      [453,183,340,388,512,617],\n      [999,999,999,999,999,999],\n    ],\n  },\n  'female': {\n    'benchpress': [\n      [0,0,0,0,0,0],\n      [97,49,63,73,94,116],\n      [105,53,68,79,109,124],\n      [114,57,73,85,109,133],\n      [123,60,77,90,116,142],\n      [132,64,82,95,122,150],\n      [148,70,90,105,135,165],\n      [165,76,97,113,146,183],\n      [181,81,104,122,158,192],\n      [198,88,112,130,167,205],\n      [199,92,118,137,177,217],\n      [999,999,999,999,999,999],\n    ],\n    'squat': [\n      [0,0,0,0,0,0],\n      [97,46,84,98,129,163],\n      [105,49,91,106,140,174],\n      [114,53,98,114,150,187],\n      [123,56,103,121,160,199],\n      [132,59,110,127,168,211],\n      [148,65,121,141,185,232],\n      [165,70,130,151,200,256],\n      [181,75,139,164,215,268],\n      [198,81,150,174,229,288],\n      [199,85,158,181,242,303],\n      [999,999,999,999,999,999],\n    ],\n    'deadlift': [\n      [0,0,0,0,0,0],\n      [97,57,105,122,175,232],\n      [105,61,114,132,189,242],\n      [114,66,122,142,200,253],\n      [123,70,129,151,211,263],\n      [132,74,137,159,220,273],\n      [148,81,151,176,241,295],\n      [165,88,162,189,258,319],\n      [181,94,174,204,273,329],\n      [198,101,187,217,284,349],\n      [199,107,197,229,297,364],\n      [999,999,999,999,999,999],\n    ],\n  }\n}\n\n/**\n * ポンドからキログラムに変換\n * @param lb\n * @returns {number}\n */\nfunction lb2kg(lb) {\n  return Math.round(lb/2.2046);\n}\n\n/**\n * 棒グラフのデータを返す\n * @param type\n * @param gender\n * @param wheiht\n */\nfunction getGraphData(type, gender, bodyWeight, weight) {\n\n  const lbTable = strengthTable[gender][type];\n\n  // 強度基準テーブルをポンド->キログラムに変換\n  const kgTable = lbTable.map((lbRow) => {\n    const kgRow = lbRow.map((lb) => {\n      return lb2kg(lb);\n    })\n    return kgRow;\n  })\n\n  // 体重から強度レベルの行を求める\n  // kgTable\n  // 0:  [0, 0, 0, 0, 0, 0]\n  // 1:  [52, 38, 49, 59, 81, 101]\n  // 2:  [56, 41, 53, 64, 88, 110]\n  // 12: [205, 72, 93, 112, 154, 193]\n  // 13: [453, 453, 453, 453, 453, 453]\n  // 配列の1要素目が体重、2以降がバーベル重量\n  // 50kgだったら1を使いたい\n  // 53kgだったら2を使いたい\n  // 206kgだったら12を使いたい\n  let index = kgTable.findIndex((kgRow, index) => {\n    return (bodyWeight > kgTable[index][0] && bodyWeight <= kgTable[index + 1][0]);\n  })\n  index = index + 1;\n  if (gender === 'male' && index === 13) {\n    index = 12;\n  }\n  if (gender === 'female' && index === 11) {\n    index = 10;\n  }\n\n  // 重量から強度基準の列を求める\n  // 体重60kgの場合、中級69kg、上級94kgである\n  // この場合、挙上が80kgの場合は中級扱いとする\n  let columnIndex = 0;\n  if (weight >= kgTable[index][5]) {\n    columnIndex = 5;\n  } else if ((weight >= kgTable[index][4]) && (weight < kgTable[index][5])) {\n    columnIndex = 4;\n  } else if ((weight >= kgTable[index][3]) && (weight < kgTable[index][4])) {\n    columnIndex = 3;\n  } else if ((weight >= kgTable[index][2]) && (weight < kgTable[index][3])) {\n    columnIndex = 2;\n  } else if ((weight >= kgTable[index][1]) && (weight < kgTable[index][2])) {\n    columnIndex = 1;\n  } else {\n    columnIndex = 1;\n  }\n\n\n  // 標準棒グラフのデータ\n  const standards = [\n    {x: 1, y: kgTable[index][1]},\n    {x: 2, y: kgTable[index][2]},\n    {x: 3, y: kgTable[index][3]},\n    {x: 4, y: kgTable[index][4]},\n    {x: 5, y: kgTable[index][5]}\n  ];\n\n  // 散布図のデータ\n  const myData = {\n    x: columnIndex,\n    y: weight,\n  };\n\n  // エリートのマックス重量もしくは挙上重量に合わせて\n  // 棒グラフの最大目盛りを設定\n  const eleteMaxWeight = kgTable[index][5];\n  let tickFormat = [];\n  if (eleteMaxWeight > 250 || weight > 250) {\n    tickFormat = [0, 50, 100, 150, 200, 250, 300];\n  } else if ((eleteMaxWeight <= 250 && eleteMaxWeight > 200) || (weight <= 250 && weight > 200)) {\n    tickFormat = [0, 50, 100, 150, 200, 250];\n  } else if ((eleteMaxWeight <= 200 && eleteMaxWeight > 150) || (weight <= 200 && weight > 150)) {\n    tickFormat = [0, 50, 100, 150, 200];\n  } else if ((eleteMaxWeight <= 150 && eleteMaxWeight > 100) || (weight <= 150 && weight > 100)) {\n    tickFormat = [0, 50, 100, 150];\n  } else if (eleteMaxWeight <= 100 || weight <= 100) {\n    tickFormat = [0, 50, 100];\n  }\n\n  const result = {\n    'standards': standards,\n    'myData': myData,\n    'tickFormat': tickFormat,\n  }\n\n  return result;\n}\n\n/**\n * 散布図ポイント\n */\nclass Point extends React.Component {\n  render() {\n    const {x, y, gender} = this.props;\n    const point = (gender === 'male') ? \"👨\" : \"👩\"; /* 💪🦵👨👩 */\n    return (\n      <text x={x} y={y} fontSize={16}>\n        {point}\n      </text>\n    );\n  }\n}\n\n// バリデーション\nPoint.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  gender: PropTypes.string.isRequired,\n};\n\n\nexport default function Level() {\n  const classes = useStyles();\n\n  // 種目と性別 hook\n  const [values, setValues] = React.useState({\n    type: 'benchpress',\n    gender: 'male',\n  });\n  const handleChange = prop => event => {\n    values[prop] = event.target.value;\n    setValues({\n      ...values\n    });\n  };\n\n  // バーベル重量 hook\n  const [weight, setWeight] = React.useState(40);\n  const handleWeightSliderChange = (event, newValue) => {\n    setWeight(newValue);\n  }\n  const weightMarks = [\n    { value: 0, label: '0',},\n    { value: 25, label: '25',},\n    { value: 50, label: '50',},\n    { value: 75, label: '75',},\n    { value: 100, label: '100',},\n    { value: 125, label: '125',},\n    { value: 150, label: '150',},\n    { value: 175, label: '175',},\n    { value: 200, label: '200',},\n    { value: 250, label: '250',},\n    { value: 280, label: '280kg〜',},\n  ];\n\n  // 体重 hook\n  const [bodyWeight, setBodyWeight] = React.useState(60);\n  const handleBodyWeightSliderChange = (event, newValue) => {\n    setBodyWeight(newValue);\n  }\n  const bodyWeightMarks = [\n    { value: 0, label: '0',},\n    { value: 40, label: '40',},\n    { value: 50, label: '50',},\n    { value: 60, label: '60',},\n    { value: 70, label: '70',},\n    { value: 80, label: '80',},\n    { value: 90, label: '90',},\n    { value: 100, label: '100',},\n    { value: 120, label: '120',},\n    { value: 145, label: '145kg〜',},\n  ];\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            あなたの強さは？\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl className={clsx(classes.formControl)}>\n            <InputLabel id=\"type-select-label\">種目</InputLabel>\n            <Select\n              labelId=\"type-select-helper-label\"\n              id=\"type-select-helper\"\n              value={values.type}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value=\"benchpress\">ベンチプレス</MenuItem>\n              <MenuItem value=\"squat\">スクワット</MenuItem>\n              <MenuItem value=\"deadlift\">デッドリフト</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl className={clsx(classes.formControl)}>\n            <FormLabel component=\"legend\" className={classes.Label}>性別</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              value={values.gender}\n              onChange={handleChange('gender')}>\n              <div className={classes.flex}>\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"男性\" checked={values.gender === 'male'}/>\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"女性\" checked={values.gender === 'female'}/>\n              </div>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography className={classes.Label} id=\"weight-slider\" gutterBottom>\n            体重\n          </Typography>\n          <Slider\n            value={bodyWeight}\n            aria-labelledby=\"weight-slider\"\n            min={0}\n            max={145}\n            step={1}\n            marks={bodyWeightMarks}\n            valueLabelDisplay=\"on\"\n            onChange={handleBodyWeightSliderChange}\n          />\n          <Typography className={classes.Label} id=\"weight-slider\" gutterBottom>\n            挙上重量\n          </Typography>\n          <Slider\n            value={weight}\n            aria-labelledby=\"weight-slider\"\n            min={0}\n            max={280}\n            step={1}\n            marks={weightMarks}\n            valueLabelDisplay=\"on\"\n            onChange={handleWeightSliderChange}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <div className={classes.graph}>\n            <VictoryChart\n              // adding the material theme provided with Victory\n              title=\"強さ標準\"\n              theme={VictoryTheme.material}\n              height={220}\n              width={450}\n              domainPadding={{\n                x: 10,\n              }}\n              animate={{ duration: 1000, easing: \"bounce\" }}\n              containerComponent={<VictoryVoronoiContainer/>}\n            >\n\n              <VictoryAxis\n                tickValues={[1, 2, 3, 4, 5]}\n                tickFormat={[\"ほぼ未経験者\\n(〜6ヶ月)\", \"初心者\", \"中級者\", \"上級者\", \"エリート\"]}\n                style={{\n                  axisLabel: {fontSize: 8, padding: 30},\n                  ticks: {stroke: \"#fff\", size: 5},\n                  tickLabels: {fontSize: 8, fill: \"#fff\", padding: 5}\n                }}\n              />\n              <VictoryAxis\n                dependentAxis\n                tickFormat={getGraphData(values.type, values.gender, bodyWeight, weight)['tickFormat']}\n                style={{\n                  axisLabel: {fontSize: 8, padding: 30},\n                  ticks: {stroke: \"#d3d3d3\", size: 5},\n                  tickLabels: {fontSize: 8, fill: \"#fff\", padding: 5}\n                }}\n              />\n              <VictoryBar horizontal\n                          data={getGraphData(values.type, values.gender, bodyWeight, weight)['standards']}\n                          style={{\n                            data: {fill: \"#BB86FC\", width: 20},\n                            labels: {fontSize: 8, fill: \"#fff\"}\n                          }}\n                          labels={({ datum }) => `${Math.round(datum.y)}kg`}\n              />\n              <VictoryScatter\n                style={{\n                  labels: {fontSize: 8, fill: \"#B00020\", fontWeight:\"900\"},\n                }}\n                animate={{\n                  onLoad: {\n                    duration: 2000,\n                    before: () => ({ _y: 0, opacity: 0 }),\n                    after: (datum) => ({ _y: datum._y, opacity: 1 })\n                  },\n                }}\n                labelComponent={<VictoryLabel dy={5} dx={35}/>}\n                labels={({ datum }) => `You: ${Math.round(datum.y)}kg`}\n                size={7}\n                dataComponent={<Point gender={values.gender}/>}\n                data={[\n                  getGraphData(values.type, values.gender, bodyWeight, weight)['myData'],\n                ]}\n              />\n            </VictoryChart>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport clsx from \"clsx\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport indigo from '@material-ui/core/colors/indigo';\n\nimport { VictoryBar, VictoryChart, VictoryAxis,\n  VictoryTheme, VictoryScatter, VictoryVoronoiContainer, VictoryLabel, VictoryStack,\n  VictoryPortal} from 'victory';\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  divider: {\n    marginBottom: theme.spacing(3),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250,\n  },\n  sliderBox: {\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  Label: {\n    fontSize: \"small\",\n    color: \"#fff\",\n  },\n  flex: {\n    display: \"flex\",\n  },\n  graph: {\n    border: \"1px solid #ccc\",\n    minWidth: 250,\n  },\n}));\n\n\n/**\n * 強度基準テーブル (単位はポンド)\n * @type {{female: {squat: number[][], deadlift: number[][], benchpress: number[][]}, male: {squat: number[][], deadlift: number[][], benchpress: number[][]}}}\n * @link https://startingstrength.com/files/standards.pdf\n */\nconst strengthTable = {\n  'male': {\n    'benchpress': [\n      [0,0,0,0,0,0],\n      [114,84,107,130,179,222],\n      [123,91,116,142,194,242],\n      [132,98,125,153,208,260],\n      [148,109,140,172,234,291],\n      [165,119,152,187,255,319],\n      [181,128,164,201,275,343],\n      [198,135,173,213,289,362],\n      [220,142,183,225,306,381],\n      [242,149,190,232,316,395],\n      [275,153,196,239,325,407],\n      [319,156,199,244,333,416],\n      [453,159,204,248,340,425],\n      [999,999,999,999,999,999],\n    ],\n    'squat': [\n      [0,0,0,0,0,0],\n      [114,78,144,174,240,320],\n      [123,84,155,190,259,346],\n      [132,91,168,205,278,369],\n      [148,101,188,230,313,410],\n      [165,110,204,250,342,445],\n      [181,119,220,269,367,479],\n      [198,125,232,285,387,504],\n      [220,132,244,301,409,532],\n      [242,137,255,311,423,551],\n      [275,141,261,319,435,567],\n      [319,144,267,326,445,580],\n      [453,147,272,332,454,593],\n      [999,999,999,999,999,999],\n    ],\n    'deadlift': [\n      [0,0,0,0,0,0],\n      [114,97,179,204,299,387],\n      [123,105,194,222,320,414],\n      [132,113,209,239,342,438],\n      [148,126,234,269,380,482],\n      [165,137,254,293,411,518],\n      [181,148,274,315,438,548],\n      [198,156,289,333,457,567],\n      [220,164,305,351,479,586],\n      [242,172,318,363,490,596],\n      [275,176,326,373,499,602],\n      [319,180,333,381,506,608],\n      [453,183,340,388,512,617],\n      [999,999,999,999,999,999],\n    ],\n  },\n  'female': {\n    'benchpress': [\n      [0,0,0,0,0,0],\n      [97,49,63,73,94,116],\n      [105,53,68,79,109,124],\n      [114,57,73,85,109,133],\n      [123,60,77,90,116,142],\n      [132,64,82,95,122,150],\n      [148,70,90,105,135,165],\n      [165,76,97,113,146,183],\n      [181,81,104,122,158,192],\n      [198,88,112,130,167,205],\n      [199,92,118,137,177,217],\n      [999,999,999,999,999,999],\n    ],\n    'squat': [\n      [0,0,0,0,0,0],\n      [97,46,84,98,129,163],\n      [105,49,91,106,140,174],\n      [114,53,98,114,150,187],\n      [123,56,103,121,160,199],\n      [132,59,110,127,168,211],\n      [148,65,121,141,185,232],\n      [165,70,130,151,200,256],\n      [181,75,139,164,215,268],\n      [198,81,150,174,229,288],\n      [199,85,158,181,242,303],\n      [999,999,999,999,999,999],\n    ],\n    'deadlift': [\n      [0,0,0,0,0,0],\n      [97,57,105,122,175,232],\n      [105,61,114,132,189,242],\n      [114,66,122,142,200,253],\n      [123,70,129,151,211,263],\n      [132,74,137,159,220,273],\n      [148,81,151,176,241,295],\n      [165,88,162,189,258,319],\n      [181,94,174,204,273,329],\n      [198,101,187,217,284,349],\n      [199,107,197,229,297,364],\n      [999,999,999,999,999,999],\n    ],\n  }\n}\n\n/**\n * ポンドからキログラムに変換\n * @param {number} lb ポンド\n * @returns {number} キログラム\n */\nfunction lb2kg(lb) {\n  return Math.round(lb/2.2046);\n}\n\n/**\n * 棒グラフのデータを返す\n * @param {string} type 種目\n * @param {string} gender 性別\n * @param {number} bodyWeight 体重\n * @param {number} weight 挙上重量\n * @returns {{standards: ({x: number, y: number, label: string})[], tickFormat: [], myData: {x: number, y: *}}} 棒グラフのデータ\n */\nfunction getGraphData(type, gender, bodyWeight, weight) {\n  const lbTable = strengthTable[gender][type];\n\n  // 強度基準テーブルをポンド->キログラムに変換\n  const kgTable = lbTable.map((lbRow) => {\n    const kgRow = lbRow.map((lb) => {\n      return lb2kg(lb);\n    })\n    return kgRow;\n  })\n\n  // 体重から強度レベルの行を求める\n  // kgTable\n  // 0:  [0, 0, 0, 0, 0, 0]\n  // 1:  [52, 38, 49, 59, 81, 101]\n  // 2:  [56, 41, 53, 64, 88, 110]\n  // 12: [205, 72, 93, 112, 154, 193]\n  // 13: [453, 453, 453, 453, 453, 453]\n  // 配列の1要素目が体重、2以降がバーベル重量\n  // 50kgだったら1を使いたい\n  // 53kgだったら2を使いたい\n  // 206kgだったら12を使いたい\n  let index = kgTable.findIndex((kgRow, idx) => {\n    return (bodyWeight > kgTable[idx][0] && bodyWeight <= kgTable[idx + 1][0]);\n  })\n  index = index + 1;\n  if (gender === 'male' && index === 13) {\n    index = 12;\n  }\n  if (gender === 'female' && index === 11) {\n    index = 10;\n  }\n\n\n  // エリートのマックス重量もしくは挙上重量に合わせて棒グラフの最大目盛りを設定\n  const eleteMaxWeight = kgTable[index][5];\n  let tickFormat = [];\n  if (eleteMaxWeight > 250 || weight > 250) {\n    tickFormat = [0, 50, 100, 150, 200, 250, 300];\n  } else if ((eleteMaxWeight <= 250 && eleteMaxWeight > 200) || (weight <= 250 && weight > 200)) {\n    tickFormat = [0, 50, 100, 150, 200, 250];\n  } else if ((eleteMaxWeight <= 200 && eleteMaxWeight > 150) || (weight <= 200 && weight > 150)) {\n    tickFormat = [0, 50, 100, 150, 200];\n  } else if ((eleteMaxWeight <= 150 && eleteMaxWeight > 100) || (weight <= 150 && weight > 100)) {\n    tickFormat = [0, 50, 100, 150];\n  } else if (eleteMaxWeight <= 100 || weight <= 100) {\n    tickFormat = [0, 50, 100];\n  }\n\n  // 積み上げ棒グラフのデータ\n  // 積み上げなので単純に挙上重量を設定するだけではだめ\n  // 例) 2個目の値は、1個目との差分を設定する\n  const weightL1 = Math.round(kgTable[index][1]);\n  const weightL2 = Math.round(kgTable[index][2]);\n  const weightL3 = Math.round(kgTable[index][3]);\n  const weightL4 = Math.round(kgTable[index][4]);\n  const weightL5 = Math.round(kgTable[index][5]);\n  \n  const standards = [\n    {x: 1, y: weightL1, label:`未経験\\n(${weightL1}kg〜)`},\n    {x: 1, y: weightL2-weightL1, label:`初心者\\n(${weightL2}kg〜)`},\n    {x: 1, y: weightL3-weightL2, label:`中級者\\n(${weightL3}kg〜)`},\n    {x: 1, y: weightL4-weightL3, label:`上級者\\n(${weightL4}kg〜)`},\n    {x: 1, y: weightL5-weightL4, label:`エリート\\n(${weightL5}kg〜)`},\n    {x: 1, y: tickFormat[tickFormat.length-1]-weightL5} /* 最後は最大目盛りからエリートの重量の差分 */\n  ];\n\n  // 自身の記録(散布図)のデータ\n  const myData = {\n    x: 1,\n    y: weight,\n  };\n\n  const result = {\n    'standards': standards,\n    'myData': myData,\n    'tickFormat': tickFormat,\n  }\n\n  return result;\n}\n\n/**\n * 自身の挙上重量ポイント\n * (散布図のプロット)\n */\nclass Point extends React.Component {\n  render() {\n    const {x, y, gender} = this.props;\n    const point = (gender === 'male') ? \"👨\" : \"👩\"; /* 💪🦵👨👩 */\n    return (\n      <text x={x} y={y} fontSize={16}>\n        {point}\n      </text>\n    );\n  }\n}\n// バリデーション\nPoint.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  gender: PropTypes.string.isRequired,\n};\n\nexport default function Level() {\n  const classes = useStyles();\n\n  // 種目と性別 Hooks\n  const [values, setValues] = React.useState({\n    type: 'benchpress',\n    gender: 'male',\n  });\n  const handleChange = prop => event => {\n    values[prop] = event.target.value;\n    setValues({\n      ...values\n    });\n  };\n\n  // バーベル重量 Hooks\n  const [weight, setWeight] = React.useState(40);\n  const handleWeightSliderChange = (event, newValue) => {\n    setWeight(newValue);\n  }\n  const weightMarks = [\n    { value: 0, label: '0',},\n    { value: 25, label: '25',},\n    { value: 50, label: '50',},\n    { value: 75, label: '75',},\n    { value: 100, label: '100',},\n    { value: 125, label: '125',},\n    { value: 150, label: '150',},\n    { value: 175, label: '175',},\n    { value: 200, label: '200',},\n    { value: 250, label: '250',},\n    { value: 280, label: '280kg〜',},\n  ];\n\n  // 体重 Hooks\n  const [bodyWeight, setBodyWeight] = React.useState(60);\n  const handleBodyWeightSliderChange = (event, newValue) => {\n    setBodyWeight(newValue);\n  }\n  const bodyWeightMarks = [\n    { value: 0, label: '0',},\n    { value: 40, label: '40',},\n    { value: 50, label: '50',},\n    { value: 60, label: '60',},\n    { value: 70, label: '70',},\n    { value: 80, label: '80',},\n    { value: 90, label: '90',},\n    { value: 100, label: '100',},\n    { value: 120, label: '120',},\n    { value: 145, label: '145kg〜',},\n  ];\n\n  const graphData = getGraphData(values.type, values.gender, bodyWeight, weight);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            レベルを知る\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            種目別に自分がどの程度のレベルなのかを確認することができます。\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Divider className={classes.divider} />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl className={clsx(classes.formControl)}>\n            <InputLabel id=\"type-select-label\">種目</InputLabel>\n            {/* Select使うとStrictModeの違反ワーニングが出るがMaterial-UIは治すつもりはないらしい\n              @link https://github.com/mui-org/material-ui/issues/13221 */}\n            <Select\n              labelId=\"type-select-helper-label\"\n              id=\"type-select-helper\"\n              value={values.type}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value=\"benchpress\">ベンチプレス</MenuItem>\n              <MenuItem value=\"squat\">スクワット</MenuItem>\n              <MenuItem value=\"deadlift\">デッドリフト</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl className={clsx(classes.formControl)}>\n            <FormLabel component=\"legend\" className={classes.Label}>性別</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              value={values.gender}\n              onChange={handleChange('gender')}>\n              <div className={classes.flex}>\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"男性\" checked={values.gender === 'male'}/>\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"女性\" checked={values.gender === 'female'}/>\n              </div>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography className={classes.Label} id=\"weight-slider\" gutterBottom>\n            体重\n          </Typography>\n          <Slider\n            value={bodyWeight}\n            aria-labelledby=\"weight-slider\"\n            min={0}\n            max={145}\n            step={1}\n            marks={bodyWeightMarks}\n            valueLabelDisplay=\"on\"\n            onChange={handleBodyWeightSliderChange}\n          />\n          <Typography className={classes.Label} id=\"weight-slider\" gutterBottom>\n            挙上重量\n          </Typography>\n          <Slider\n            value={weight}\n            aria-labelledby=\"weight-slider\"\n            min={0}\n            max={280}\n            step={1}\n            marks={weightMarks}\n            valueLabelDisplay=\"on\"\n            onChange={handleWeightSliderChange}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <div className={classes.graph}>\n            <VictoryChart\n              theme={VictoryTheme.material}\n              animate={{ duration: 900, onLoad: {duration: 1500}, easing: \"bounce\" }}\n              containerComponent={<VictoryVoronoiContainer/>}\n              height={180}\n              width={600}\n            >\n              <VictoryAxis\n                tickFormat={[\"基準値\"]}\n                style={{\n                  ticks: {stroke: \"#d3d3d3\", size: 5},\n                  tickLabels: {fontSize: 10, fill: \"#fff\", padding: 5},\n                }}\n              />\n              <VictoryAxis\n                dependentAxis\n                tickFormat={graphData.tickFormat}\n                style={{\n                  ticks: {stroke: \"#d3d3d3\", size: 5},\n                  tickLabels: {fontSize: 10, fill: \"#fff\", padding: 5}\n                }}\n              />\n              <VictoryStack\n                horizontal\n                colorScale={[indigo[50], indigo[100], indigo[200], indigo[300], indigo[400], indigo[500]]}\n                style={{\n                  data: { width: 40 },\n                  labels: { padding: -20, size: 4}\n                }}\n                labelComponent={\n                  <VictoryPortal>\n                    <VictoryLabel dy={-35} style={{fontSize: 10, fill: \"white\"}}/>\n                  </VictoryPortal>\n                }\n              >\n                <VictoryBar\n                  data={[\n                    graphData.standards[0],\n                  ]}\n                />\n                {/* VictoryBarの中に以下のようにラベルを設定できるが、yは積み上げ差分の値なのでkgには使えない。別途dataに設定する */}\n                {/* labels={({ datum }) => `未経験者\\n(${datum.y}kg〜)`} */}\n                <VictoryBar\n                  data={[\n                    graphData.standards[1],\n                  ]}\n                />\n                <VictoryBar\n                  data={[\n                    graphData.standards[2],\n                  ]}\n                />\n                <VictoryBar\n                  data={[\n                    graphData.standards[3],\n                  ]}\n                />\n                <VictoryBar\n                  data={[\n                    graphData.standards[4],\n                  ]}\n                />\n                <VictoryBar\n                  data={[\n                    graphData.standards[5],\n                  ]}\n                />\n              </VictoryStack>\n              <VictoryScatter\n                dataComponent={<Point gender={values.gender}/>}\n                labelComponent={<VictoryLabel dy={7} dx={-10}/>}\n                labels={({ datum }) => `You (${Math.round(datum.y)}kg)`}\n                style={{\n                  labels: {fontSize: 10, fill: \"#c51162\", fontWeight:\"900\"},\n                }}\n                animate={{\n                  duration: 900,\n                  onLoad: {\n                    duration: 1700,\n                    before: () => ({ _y: 0, opacity: 0 }),\n                    after: (datum) => ({ _y: datum._y, opacity: 1 })\n                  },\n                }}\n                data={[\n                  graphData.myData,\n                ]}\n              />\n            </VictoryChart>\n            <Grid item xs={12}>\n              <blockquote>\n                [参考：Starting Strength&nbsp;\n                <Link href=\"https://startingstrength.com/files/standards.pdf\" color=\"textSecondary\" target=\"_blank\" rel=\"noreferrer\" >\n                  Strength Standards\n                </Link>\n                ]\n              </blockquote>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// @see https://material-ui.com/components/material-icons/\nimport BorderAllIcon from '@material-ui/icons/BorderAll';\nimport Forward10Icon from '@material-ui/icons/Forward10';\nimport Filter5Icon from '@material-ui/icons/Filter5';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\n\nimport About from './About';\nimport RmConv from './Rmconv';\nimport Maxweight from './Maxweight';\nimport Fivefive from './Fivefive';\nimport Test from '../Test';\nimport Level from './Level';\n\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Box from \"@material-ui/core/Box\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  text: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  detailSettingsBar: {\n    position: 'relative',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 16,\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n}));\n\n\nfunction createMenu(label, route, icontype) {\n  return { label, route, icontype };\n}\n\nconst menus = [\n  // ラベル, リンク文字列&表示コンポーネント名, 表示アイコン\n  createMenu('はじめに', 'About', 'ContactSupportIcon'),\n  createMenu('レベルを知る', 'Level', 'AssessmentIcon'),\n  createMenu('RM換算表', 'RmConv', 'BorderAllIcon'),\n  createMenu('MAX重量計算機', 'Maxweight', 'FitnessCenterIcon'),\n  createMenu('5x5法 メニュー生成', 'Fivefive', 'Filter5Icon'),\n/*  createMenu('GVT法 メニュー生成', 'GVT', 'Forward10Icon'), */\n/*  createMenu('テスト', 'Test', 'EmojiEmotionsIcon'), */\n];\n\n// アイコンの決定\nfunction icon(icontype) {\n  switch (icontype) {\n    case 'ContactSupportIcon':\n      return <ContactSupportIcon/>\n    case 'AssessmentIcon':\n      return <AssessmentIcon/>\n    case 'FitnessCenterIcon':\n      return <FitnessCenterIcon/>\n    case 'Filter5Icon':\n      return <Filter5Icon/>\n    case 'Forward10Icon':\n      return <Forward10Icon/>\n    case 'EmojiEmotionsIcon':\n      return <EmojiEmotionsIcon/>\n    default:\n      return <BorderAllIcon/>\n  }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n// 子コンポーネントで詳細設定値を使いたいため、コンテキストを作成しエクスポート\nexport const DetailOptions = React.createContext();\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // ドロワー Hooks\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // 詳細設定 Hooks\n  const [detailOptions, setDetailOptions] = React.useState({\n    benchpressCoefficient: 40,\n    squatCoefficient: 33.3,\n  });\n\n  // 詳細設定 開閉 Hooks\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setSettingsOpen(true);\n  };\n  const handleClose = () => {\n    setSettingsOpen(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  /**\n   * 詳細設定時のハンドラー\n   * @param {Object} prop プロパティ\n   * @returns {void}\n   */\n  const handleDetailOptionsSave = prop => event => {\n    detailOptions[prop] = Number(event.target.value);\n    const benchpressCoefficient  = detailOptions.benchpressCoefficient === 0 ? '' : detailOptions.benchpressCoefficient;\n    const squatCoefficient  = detailOptions.squatCoefficient === 0 ? '' : detailOptions.squatCoefficient;\n\n    setDetailOptions({\n      benchpressCoefficient: benchpressCoefficient,\n      squatCoefficient: squatCoefficient\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <BrowserRouter>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} noWrap>\n\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleClickOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <SettingsIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {menus.map((row) => (\n            <ListItem button key={row.label} component={Link} to={\"/\" + row.route} onClick={handleDrawerClose}>\n              <ListItemIcon>\n                {icon(row.icontype)}\n              </ListItemIcon>\n              <ListItemText primary={row.label} />\n            </ListItem>\n          ))}\n        </List>\n\n        <Divider />\n      </Drawer>\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          {/* パスに応じてコンポーネントを変える */}\n          <Switch>\n            <Route exact path=\"/\">\n              <About />\n            </Route>\n            <Route exact path=\"/About\">\n              <About />\n            </Route>\n            <Route exact path=\"/RmConv\">\n              {/* 詳細設定を子コンポーネントで使うため、コンテキスト.プロバイダーコンポーネントを設定 */}\n              <DetailOptions.Provider value={[detailOptions, setDetailOptions]}>\n                <RmConv />\n              </DetailOptions.Provider>\n            </Route>\n            <Route exact path=\"/Maxweight\">\n              <DetailOptions.Provider value={[detailOptions, setDetailOptions]}>\n                <Maxweight />\n              </DetailOptions.Provider>\n            </Route>\n            <Route exact path=\"/Fivefive\">\n              <Fivefive />\n            </Route>\n            <Route exact path=\"/Test\">\n              <Test />\n            </Route>\n            <Route exact path=\"/Level\">\n              <Level />\n            </Route>\n          </Switch>\n        </main>\n\n        <div>\n          <Dialog fullScreen open={settingsOpen} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.detailSettingsBar}>\n              <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                  <CloseIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                  詳細設定\n                </Typography>\n                <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                  保存\n                </Button>\n              </Toolbar>\n            </AppBar>\n            <Box className={classes.text} display=\"block\" displayPrint=\"block\" m={1}>\n              <Grid container spacing={2}>\n                <Grid item md={12} sm={12} xs={12}>\n                  <Alert severity=\"info\">\n                    MAX重量やRM換算はO&apos;Conner式の計算式を使用しています。<br/>\n                    係数を自身の記録と照らし合わせて調整を行うことができます。<br/>\n                    予測MAX重量より挙がる人は値を下げ、挙がらない人は値を上げてください。<br/>\n                    <blockquote>[参考：Wikipedia <a href={\"https://en.wikipedia.org/wiki/One-repetition_maximum#O'Conner_et_al.\"} color=\"textSecondary\" target={\"_blank\"} rel={\"noopener noreferrer\"}>One-repetition maximum</a>]</blockquote>\n                  </Alert>\n                </Grid>\n\n                <Grid item md={6} sm={6} xs={12}>\n                  <TextField\n                     id=\"benchpressCoefficient\"\n                     label=\"ベンチプレス係数\"\n                     type=\"number\"\n                     onChange={handleDetailOptionsSave('benchpressCoefficient')}\n                     value={detailOptions.benchpressCoefficient}\n                     InputProps={{\n                       inputProps: { min: 0, max: 100, step: 0.1},\n                     }}\n                     InputLabelProps={{\n                       shrink: true,\n                     }}\n                     margin=\"normal\"\n                  />\n                </Grid>\n                <Grid item md={6} sm={6} xs={12}>\n                  <TextField\n                    id=\"squatCoefficient\"\n                    label=\"スクワット/デッドリフト係数\"\n                    type=\"number\"\n                    onChange={handleDetailOptionsSave('squatCoefficient')}\n                    value={detailOptions.squatCoefficient}\n                    InputProps={{\n                      inputProps: { min: 0, max: 100, step:0.1},\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n          </Dialog>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark' // 'light'(default) or 'dark'\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n    <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}